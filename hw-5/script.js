// –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —é–∑–µ—Ä—É confirm() —Å —Ç–µ–∫—Å—Ç–æ–º `Tell me three most important words üíö`.
// –ï—Å–ª–∏ —é–∑–µ—Ä –Ω–∞–∂–∏–º–∞–µ—Ç Cancel, —Ç–æ –∑–∞–∫–∞–Ω—á–∏–≤–∞–µ–º –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–µ –ø—Ä–æ–≥—Ä–∞–º–º—ã.
// –ï—Å–ª–∏ —é–∑–µ—Ä –Ω–∞–∂–∏–º–∞–µ—Ç Ok, —Ç–æ –ø–æ—Å–ª–µ–¥–æ–≤–∞—Ç–µ–ª—å–Ω–æ –∑–∞–ø—Ä–∞—à–∏–≤–∞–µ–º —É —é–∑–µ—Ä–∞ —á–µ—Ä–µ–∑ prompt() —Ç—Ä–∏ —Å–ª–æ–≤–∞. –¢—Ä–µ–±–æ–≤–∞–Ω–∏–µ –∫ –∫–∞–∂–¥–æ–º—É —Å–ª–æ–≤—É:
// –ü–æ–≤—Ç–æ—Ä–Ω–æ –∑–∞–ø—Ä–∞—à–∏–≤–∞–µ–º —Å–ª–æ–≤–æ –µ—Å–ª–∏:
// —é–∑–µ—Ä –Ω–∞–∂–∞–ª –û—Ç–º–µ–Ω–∞,
// —é–∑–µ—Ä –≤–≤–µ–ª –ø—É—Å—Ç—É—é —Å—Ç—Ä–æ–∫—É,
// —é–∑–µ—Ä –≤–≤–µ–ª —Å–ª–æ–≤–æ, –∫–æ—Ç–æ—Ä–æ–µ —Å–æ–¥–µ—Ä–∂–∏—Ç —Ö–æ—Ç—è –±—ã –æ–¥–Ω—É —Ü–∏—Ñ—Ä—É.
// –ü–æ—Å–ª–µ –ø–æ–ª—É—á–µ–Ω–∏—è –≤–∞–ª–∏–¥–Ω–æ–≥–æ —Å–ª–æ–≤–∞ –ø—Ä–µ–¥–ª–∞–≥–∞–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é –≤—ã–±—Ä–∞—Ç—å –æ–¥–∏–Ω –∏–∑ –≤–∞—Ä–∏–∞–Ω—Ç–æ–≤ –µ–≥–æ –ø—Ä–µ–æ–±—Ä–∞–∑–æ–≤–∞–Ω–∏—è:
// uppercase
// lowercase
// capitalize
// –ü–æ–≤—Ç–æ—Ä–Ω–æ –∑–∞–ø—Ä–∞—à–∏–≤–∞–µ–º —É —é–∑–µ—Ä–∞ –≤–∞—Ä–∏–∞–Ω—Ç –ø—Ä–µ–æ–±—Ä–∞–∑–æ–≤–∞–Ω–∏—è —Å–ª–æ–≤–∞ –µ—Å–ª–∏ –æ–Ω –Ω–µ –≤–≤–µ–ª –Ω–∏ –æ–¥–∏–Ω –∏–∑ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–Ω—ã—Ö –≤–∞—Ä–∏–∞–Ω—Ç–æ–≤ (–û—Ç–º–µ–Ω–∞, –ø—É—Å—Ç–∞—è —Å—Ç—Ä–æ–∫–∞ –∏ –≤—Å–µ, —á—Ç–æ –Ω–µ —Ä–∞–≤–Ω–æ uppercase, lowercase, capitalize).
// –ü–æ—Å–ª–µ –∑–∞–ø—Ä–æ—Å–∞ –≤—Å–µ—Ö —Ç—Ä–µ—Ö —Å–ª–æ–≤ –∏ –ø—Ä–µ–æ–±—Ä–∞–∑–æ–≤–∞–Ω–∏—è –∫–∞–∂–¥–æ–≥–æ –∏–∑ –Ω–∏—Ö –≤—ã–≤–æ–¥–∏–º –≤ –∫–æ–Ω—Å–æ–ª—å –≤—Å–µ —Ç—Ä–∏ —Å–ª–æ–≤–∞ –≤ –≤–∏–¥–µ –æ–¥–Ω–æ–π —Å—Ç—Ä–æ–∫–∏: `${–ø–µ—Ä–≤–æ–µ —Å–ª–æ–≤–æ} ${–≤—Ç–æ—Ä–æ–µ —Å–ª–æ–≤–æ} ${—Ç—Ä–µ—Ç—å–µ —Å–ª–æ–≤–æ}!` (–ø–æ—Å–ª–µ –ø–µ—Ä–≤–æ–≥–æ –∏ –≤—Ç–æ—Ä–æ–≥–æ —Å–ª–æ–≤–∞ –¥–æ–ª–∂–µ–Ω —Å—Ç–æ—è—Ç—å –ø—Ä–æ–±–µ–ª, –∞ –ø–æ—Å–ª–µ –ø–æ—Å–ª–µ–¥–Ω–µ–≥–æ –∑–Ω–∞–∫ –≤–æ—Å–∫–ª–∏—Ü–∞–Ω–∏—è).

words = confirm(`Tell me three most important words üíö`);

if(words) {
    finalResult = '';
        toMetka: for (wordNumber = 1; wordNumber <=3; wordNumber++) {
            wordFromUser = prompt(`Tell me word ‚Ññ${wordNumber}`);
            while (!wordFromUser) {
                wordFromUser = prompt(`Tell me word ‚Ññ${wordNumber}`);
            }  
                wordFromUser = wordFromUser.replaceAll(" ", "").toLowerCase();
                
                for (letterIndex = 0; letterIndex < wordFromUser.length; letterIndex++) {
                letterOrNumber = +wordFromUser[letterIndex];
                if(!isNaN(letterOrNumber)) {
                    alert(`Please type correct word!`);
                    wordNumber--;
                    continue toMetka;
                }
                }
                do {
                    transformType = prompt(`Choose type of transformation for word ‚Ññ${wordNumber}: uppercase / lowercase / capitalize`, `uppercase`);
    
                    if (transformType) {
                        transformType = transformType.replaceAll(" ", "").toLowerCase();
                    }
                } while (transformType !=="uppercase" && transformType !=="lowercase" && transformType !=="capitalize");
                    
                transformedWord = '';
                switch (transformType) {
                    case "uppercase":
                        transformedWord = wordFromUser.toUpperCase();
                        break;
                    case "lowercase":
                        transformedWord = wordFromUser.toLowerCase();
                        break;
                    case "capitalize":
                        transformedWord = wordFromUser[0].toUpperCase()+wordFromUser.slice(1).toLowerCase();
                        break;
                }
                finalResult += transformedWord;
                wordNumber === 3 ? finalResult +=`!` : finalResult +=` `; 
    } 
    document.write(`<h2>${finalResult}</h2>`);
}
else {
    alert(`Ok, bye :(`);
}
